{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","redux/contacts/actions.js","App.js","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","styles","form","this","title","input","onChange","type","pattern","required","addContact","Component","ContactList","items","handleDelete","list","map","id","deleteContact","onClick","Filter","filter","htmlFor","addToList","createAction","deletedItem","filterChange","payload","App","term","some","item","alert","newContact","uuid","length","mapDispatch","connect","contacts","console","log","formattedFilter","toLowerCase","trim","includes","contactsReducer","createReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f616cf0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteContact\":\"ContactList_deleteContact__1bB5N\",\"list\":\"ContactList_list__2K4PC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__3HpQc\",\"input\":\"Filter_input__3K0YO\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.handleSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.onSubmit}>\n          <span className={styles.title}>Name</span>\n          <input\n            className={styles.input}\n            onChange={this.handleChange}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <span className={styles.title}>Number</span>\n          <input\n            className={styles.input}\n            name=\"number\"\n            type=\"tel\"\n            onChange={this.handleChange}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button className={styles.addContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ items, handleDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {items.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.deleteContact}\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <label className={styles.title} htmlFor=\"filter\">\n      Find contacts by name:\n      <input\n        className={styles.input}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addToList = createAction(\"list/addToList\");\nconst deletedItem = createAction(\"list/deletedItem\");\nconst filterChange = createAction(\"filter/filterChange\", (payload) => ({\n  payload: payload.target.value,\n}));\n\nexport { addToList, deletedItem, filterChange };\n","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nimport { connect } from \"react-redux\";\nimport { deletedItem, addToList, filterChange } from \"./redux/contacts/actions\";\n\nclass App extends Component {\n  state = {\n    items: [],\n    filter: \"\",\n  };\n\n  handleSubmit = (term) => {\n    const isDuplicate = this.state.items.some(\n      (item) => item.name === term.name\n    );\n    if (isDuplicate) {\n      alert(\"Такой контакт уже существует \" + term.name);\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name: term.name,\n      number: term.number,\n    };\n    this.props.addToList(newContact);\n  };\n\n  render() {\n    const { items, filter } = this.props;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        {items.length ? (\n          <>\n            <h2>Contacts</h2>\n            <Filter filter={filter} handleChange={this.props.handleChange} />\n            <ContactList items={items} handleDelete={this.props.handleDelete} />\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  const items = state.contacts.items;\n  const filter = state.contacts.filter;\n  console.log(filter);\n  const formattedFilter = filter.toLowerCase().trim();\n  const filteredContacts = items.filter((item) =>\n    item.name.toLowerCase().includes(formattedFilter)\n  );\n  return {\n    items: filteredContacts,\n    filter: state.filter,\n  };\n};\n\nconst mapDispatch = {\n  addToList,\n  handleDelete: deletedItem,\n  handleChange: filterChange,\n};\n\nexport default connect(mapState, mapDispatch)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { addToList, deletedItem, filterChange } from \"./actions\";\n\nconst initialState = {\n  items: [],\n  filter: \"\",\n};\n\nconst contactsReducer = createReducer(initialState, {\n  [addToList]: (state, action) => ({\n    ...state,\n    items: [action.payload, ...state.items],\n  }),\n  [deletedItem]: (state, action) => ({\n    ...state,\n    items: state.items.filter((item) => item.id !== action.payload),\n  }),\n  [filterChange]: (state, action) => ({\n    ...state,\n    filter: action.payload,\n  }),\n});\n\nexport default contactsReducer;\n","import { combineReducers } from \"redux\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"title\":\"ContactForm_title__3NFNu\",\"input\":\"ContactForm_input__2u7Lv\",\"addContact\":\"ContactForm_addContact__2i8KS\"};"],"sourceRoot":""}